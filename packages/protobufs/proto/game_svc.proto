syntax = "proto3";

import "google/protobuf/timestamp.proto";

enum GameOutcome {
    WHITE_WINS = 0;
    BLACK_WINS = 1;
    TIE = 2;
    KEEP_PLAYING = 3;
}

message CreateGameMessage {
    string gameId = 1;
    string whitePlayerId = 2;
    string blackPlayerId = 3; 
    uint32 maxTimeForPlayerSec = 4; 
    uint32 timeGainedOnMoveSec = 5;
}

message GameCreatedMessage {
    string gameId = 1;
}

message MakeMoveMessage {
    string gameId = 1;
    string playerId = 2;
    string move = 3;
}

message MoveValidatedMessage {
    string resultingFen = 1;
    GameOutcome outcome = 2;
    uint32 timeRemainingWhiteSec = 3;
    uint32 timeRemainingBlackSec = 4;
}

message GetGameStateMessage {
    string gameId = 1;
}

message GameStateMessage {
    string fen = 1;
    string whitePlayerId = 2;
    string blackPlayerId = 3;
    uint32 timeRemainingWhiteSec = 4;
    uint32 timeRemainingBlackSec = 5;
    repeated string moves = 6;
}

message GetGamesMessage {
    string playerId = 1;
    optional uint32 from = 2;
    optional uint32 to = 3;
}

message GameRecordsMessage {
    message GameRecordMessage {
        string gameId = 1;
        string whitePlayerId = 2;
        string blackPlayerId = 3;
        repeated string moves = 4;
        google.protobuf.Timestamp createdAt = 5;
    }

    repeated GameRecordMessage games = 1;
}

service GameService {
    rpc CreateGame(CreateGameMessage) returns (GameCreatedMessage) {}
    rpc MakeMove(MakeMoveMessage) returns (MoveValidatedMessage) {}
    rpc GetGameState(GetGameStateMessage) returns (GameStateMessage) {}
    rpc GetGames(GetGamesMessage) returns (GameRecordsMessage) {}
}